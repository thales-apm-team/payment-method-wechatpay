plugins {
    id "com.github.johnrengelman.shadow" version "4.0.3"
    id "org.sonarqube" version "2.8"
    id "org.owasp.dependencycheck" version "6.0.1"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

def externalFileName = "$projectDir/.external"
if (file(externalFileName).exists()) {
    apply from: "external.gradle"
} else {
    apply from: "monext.gradle"
}

dependencies {
    compile group: 'com.payline', name: 'payment-method-api', version: paymentMethodApiVersion

    // http client
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: "4.5.9"

    // json parser
    implementation group: 'com.google.code.gson', name: 'gson', version: gsonVersion

    // log
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion

    // lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    // tests
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: jupiterVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: jupiterVersion
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-server', version: seleniumVersion
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: seleniumVersion
}

test {
    useJUnitPlatform()
    exclude('**/*IT.class')
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}